BST -> BFS solution::

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool findTarget(TreeNode* root, int k) {
        queue<TreeNode*> que;
        
        que.push(root);
        vector<int> stk;
        
        while (!que.empty()){
            TreeNode* node = que.front(); que.pop();
            
            auto it = std::find(stk.begin(), stk.end(), node->val);
            if (it != stk.end()) return true;
            
            stk.push_back(k - node->val);
            
            if (node->left != nullptr) que.push(node->left);
            
            if (node->right != nullptr) que.push(node->right);
        }
        
        return false;
    }
};